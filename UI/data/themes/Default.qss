/* Intentionnally left blank */
/* Themes are created using Qt CSS, you can visit */
/* http://doc.qt.io/qt-5/stylesheet-reference.html and */
/* http://doc.qt.io/qt-5/stylesheet-examples.html for examples. */

/* OBS will use the theme filename for the settings. */
/* You can ship images using relative paths in qss. */
/* Dark Theme is a good place to start if you need */
/* a template. */


/* We need to set back the icons, or the preview wont stick. */

* [themeID="addIconSmall"] {
    qproperty-icon: url(:/res/images/add.svg);
}

* [themeID="removeIconSmall"] {
    qproperty-icon: url(:/res/images/remove.svg);
}

* [themeID="propertiesIconSmall"] {
    qproperty-icon: url(:/res/images/settings.svg);
}

* [themeID="configIconSmall"] {
    qproperty-icon: url(:/res/images/settings.svg);
}

* [themeID="upArrowIconSmall"] {
    qproperty-icon: url(:/res/images/up.svg);
}

* [themeID="refreshIconSmall"] {
    qproperty-icon: url(:/res/images/refresh.svg);
}

* [themeID="downArrowIconSmall"] {
    qproperty-icon: url(:/res/images/down.svg);
}

MuteCheckBox {
    outline: none;
}

MuteCheckBox::indicator:checked {
    image: url(:/res/images/mute.svg);
}

MuteCheckBox::indicator:unchecked {
    image: url(:/res/images/unmute.svg);
}

SourceTreeSubItemCheckBox {
    background: transparent;
    outline: none;
}

SourceTreeSubItemCheckBox::indicator {
    width: 10px;
    height: 10px;
}

SourceTreeSubItemCheckBox::indicator:checked {
    image: url(:/res/images/expand.png);
}

SourceTreeSubItemCheckBox::indicator:unchecked {
    image: url(:/res/images/collapse.png);
}

OBSHotkeyLabel[hotkeyPairHover=true] {
    color: red;
}


/* Volume Control */

VolumeMeter {
    qproperty-backgroundNominalColor: rgb(15, 100, 15);
    qproperty-backgroundWarningColor: rgb(100, 100, 15);
    qproperty-backgroundErrorColor: rgb(100, 15, 15);
    qproperty-foregroundNominalColor: rgb(50, 200, 50);
    qproperty-foregroundWarningColor: rgb(255, 200, 50);
    qproperty-foregroundErrorColor: rgb(200, 50, 50);
    qproperty-magnitudeColor: rgb(0, 0, 0);
    qproperty-majorTickColor: rgb(0, 0, 0);
    qproperty-minorTickColor: rgb(50, 50, 50);
}


/* Label warning/error */

QLabel#warningLabel {
    color: rgb(192, 128, 0);
    font-weight: bold;
}

QLabel#errorLabel {
    color: rgb(192, 0, 0);
    font-weight: bold;
}

* [themeID="warning"] {
    color: rgb(192, 128, 0);
    font-weight: bold;
}

* [themeID="error"] {
    color: rgb(192, 0, 0);
    font-weight: bold;
}

* [themeID="good"] {
    color: rgb(0, 128, 0);
    font-weight: bold;
}

/* About dialog */

* [themeID="aboutName"] {
    font-size: 36px;
    font-weight: bold;
}

* [themeID="aboutVersion"] {
    font-size: 16px;
    margin-bottom: 20px;
}

* [themeID="aboutInfo"] {
    margin-bottom: 20px;
}

* [themeID="aboutHLayout"] {
	background-color: #DCD9D7;
}

/* Preview background color */

* [themeID="displayBackgroundColor"] {
    qproperty-displayBackgroundColor: rgb(76, 76, 76);
}

/* Source Context */
#contextContainer {
    margin: 0px;
}

#contextContainer QPushButton {
    padding: 0px;
}

QPushButton#sourcePropertiesButton {
    qproperty-icon: url(:/res/images/properties.pngg);
}

QPushButton#sourceFiltersButton {
    qproperty-icon: url(:/res/images/filter.svg);
}

QPushButton#sourceRotateLeftButton {
    qproperty-icon: url(:res/images/rotate_left.svg);
}

QPushButton#sourceRotateRightButton {
    qproperty-icon: url(:res/images/rotate_right.svg);
}

QPushButton#sourceFlipHorizontallyButton {
    qproperty-icon: url(:res/images/flip_horz.svg);
}

QPushButton#sourceFlipVerticallyButton {
    qproperty-icon: url(:res/images/flip_vert.svg);
}

QPushButton#sourceFillScreenButton {
    qproperty-icon: url(:res/images/fill_frame.svg);
}

QPushButton#sourceFitScreenButton {
    qproperty-icon: url(:res/images/fit.svg);
}

QPushButton#sourceCenterButton {
    qproperty-icon: url(:res/images/center.svg);
}
